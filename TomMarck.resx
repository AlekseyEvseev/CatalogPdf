<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSelectTome.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>